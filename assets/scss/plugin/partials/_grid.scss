.ep-row {
  overflow: hidden;
  @include break( 'l', 'min' ) {
    display: flex;
    align-items: stretch;
  }
  // &:nth-child(2n) {
  //   flex-direction: row-reverse;
  // }
}

.ep {
  display: flex;
  flex: 1;
  align-content: stretch;
  position: relative;
  overflow: hidden;
  @include break( 'l', 'min' ) {
    min-height: 50vh;
  }
  @include break( 'm' ) {
    width: 100%;
    flex-basis: 100% !important;
  }
  .x-container {
    margin: auto;
  }
  // 1/1 = 12
  // 1/2 = 6
  // 1/3 = 4
  // 1/4 = 3
  // 1/6 =
}

// Create grid structure
$cols: ();
@for $a from 1 through 12 {
  @for $b from 1 through 12 {
    // Don't output anything where:
    // $a equals $b ( 2-2, 3-3, 4-4 -> all 100% )
    // $a is smaller than $b ( 3-2 -> over 100% )
    // You can simplify the fractions ( 2-4, 3-9 -> 50%, 33% )
    // But do output 1-1 to 1-12
    // and ( $b % $a ) % 2 != 0
    // and ( $b % $a ) % 3 != 0
    @if $a != $b
    and $a < $b
    or $a == 1 {
      $cols: append( $cols, unquote('.ep-#{$a}-#{$b},') );

      .ep-#{$a}-#{$b} {
        flex-basis: 100% / ($b / $a);
      }
    }
  }
}

$cols: str-slice( quote( $cols ), 1, str-length( quote( $cols ) ) - 1);

@include break( 'l') {
  #{$cols} {
    flex-basis: 50%;
  }
}
