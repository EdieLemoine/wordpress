@import "button-styles";

.ep-btn-group {
  display: flex;
  align-content: stretch;
  flex-wrap: wrap;
  .x-btn {
    flex: 1 0 30%;
    max-width: none;
    margin: $global-spacing / 6;
    @include break( 'm' ) {
      margin: $global-spacing / 8 0;
      flex: 1 0 100%;
    }
  }
  @include break( 'm', 'min' ) {
    margin: -$global-spacing / 6;
  }
}


a.x-btn,
button,
#{inputs( 'buttons' )} {
  // min-width: 200px;
  font-size: map-get-deep( $fonts, "body", "atts", "font-size" );
  line-height: normal;
  flex: 1;
  display: block;
  align-content: center;
  // padding: $global-spacing / 3 $global-spacing / 2;
  border-radius: $global-border-radius;
  @include font( $button-font );
  @include fast-transition;
  $button-invert-color: calculate-color( $button-background-color );

  @if $button-style == 'transparent' {
    color: $button-background-color;
    background-color: transparent;
    // border-color: $button-background-color;
    // border-width: $global-border-width;
    @include border( $button-background-color );
    .bg-color & {
      color: $button-invert-color;
      border-color: $button-invert-color;
    }
    @include active {
      color: $button-invert-color;
      background-color: $button-background-color;
      border-color: $button-background-color;
      .bg-color & {
        color: $button-background-color;
        border-color: $button-invert-color;
        background-color: $button-invert-color;
      }
    }
  }

  @if $button-style == 'transparent-invert' {
    color: calculate-color( $button-background-color );
    background-color: $button-background-color;
    @include border( $button-background-color );
    @include active {
      background-color: transparent;
      color: $button-background-color;
      border-color: $button-background-color; // Avoid override by x
    }
    .bg-color & {
      color: $button-background-color;
      background-color: $button-invert-color;
      @include border( $button-invert-color );
      @include active {
        background-color: $button-background-color;
        color: $button-invert-color;
      }
    }
  }

  @if $button-style == 'fill' {
    border: none;
    color: calculate-color( $button-background-color );
    background-color: $button-background-color;
    .bg-color & {
      color: $button-background-color;
      background-color: $button-invert-color;
    }
    @include active {

    }
  }
}

@if $button-arrow == true {
  a.x-btn::after {
    content: ' ';
    opacity: 0;
    border-top: $global-border-width solid currentColor;
    border-right: $global-border-width solid currentColor;
    transform: rotate(45deg);
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    @include size( map-get-deep( $fonts, "body", "atts", "font-size" ) * 0.75  );
    @include fast-transition;
  }

  // @include active {
  //   padding-left: 0;
  //   a.x-btn::after {
  //     opacity: 1;
  //     right: $global-spacing / 2;
  //   }
  // }
}

button:hover {
  background-color: $button-active-background-color;
}
