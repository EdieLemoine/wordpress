// @import "button-styles";

// .ep-btn-group {
//   display: flex;
//   align-content: stretch;
//   flex-wrap: wrap;
//   .x-btn,
//   .ep-btn {
//     flex: 1 0 30%;
//     max-width: none;
//     margin: $global-spacing / 6;
//     @include break( 'm' ) {
//       margin: $global-spacing / 8 0;
//       flex: 1 0 100%;
//     }
//   }
//   @include break( 'm', 'min' ) {
//     margin: -$global-spacing / 6;
//   }
// }

#{inputs('buttons')} {
  font-size: inherit;
  line-height: normal;
  flex: 1;
  display: inline-flex;
  position: relative;
  padding: 0 2em;
  border-radius: $global-border-radius;
  min-height: $input-height;
  @include font( $button-font );
  @include fast-transition;
  $button-invert-color: calculate-color( $button-background-color );
  &.small {
    padding: 0 1em;
    min-height: $input-height * 0.75;
  }
  &.submitting {
    background-image: linear-gradient( -45deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent );
    animation: progress-bar-stripes 1s infinite linear;
    background-size: 2rem 2rem;
    border-color: transparent !important;
    color: $button-invert-color !important;
    background-color: $button-background-color !important;
  }
  &:not(:first-of-type) {
    margin-left: 0.5em;
  }
  span {
    margin: auto;
    color: inherit;
  }
  &.transparent {
    color: $button-background-color;
    background-color: transparent;
    // border-color: $button-background-color;
    // border-width: $global-border-width;
    @include border( $button-background-color );
    .bg-color & {
      color: $button-invert-color;
      border-color: $button-invert-color;
    }
    @include active {
      color: $button-invert-color;
      background-color: $button-background-color;
      border-color: $button-background-color;
      .bg-color & {
        color: $button-background-color;
        border-color: $button-invert-color;
        background-color: $button-invert-color;
      }
    }
  }
  &.transparent-invert {
    color: calculate-color( $button-background-color );
    background-color: $button-background-color;
    @include border( $button-background-color );
    @include active {
      background-color: transparent;
      color: $button-background-color;
      border-color: $button-background-color; // Avoid override by x
    }
    .bg-color & {
      color: $button-background-color;
      background-color: $button-invert-color;
      @include border( $button-invert-color );
      @include active {
        background-color: $button-background-color;
        color: $button-invert-color;
      }
    }
  }
  &.fill {
    border: none;
    color: calculate-color( $button-background-color );
    background-color: $button-background-color;
    .bg-color & {
      color: $button-background-color;
      background-color: $button-invert-color;
    }
    @include active {
    }
  }
}

@if $button-arrow == true {
  a.x-btn::after {
    content: ' ';
    opacity: 0;
    border-top: $global-border-width solid currentColor;
    border-right: $global-border-width solid currentColor;
    transform: rotate(45deg);
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    @include size( map-get-deep( $fonts, "body", "atts", "font-size" ) * 0.75  );
    @include fast-transition;
  }

  // @include active {
  //   padding-left: 0;
  //   a.x-btn::after {
  //     opacity: 1;
  //     right: $global-spacing / 2;
  //   }
  // }
}

button:hover {
  background-color: $button-active-background-color;
}
