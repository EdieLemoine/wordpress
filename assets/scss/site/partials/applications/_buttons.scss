.ep-btn-group {
  display: flex;
  align-content: stretch;
  flex-wrap: wrap;
  @include break( 'medium', 'min' ) {
    margin: -$global-spacing / 3;
  }
}

.x-btn.x-btn-global {
  color: $button-color;
  font-size: $body-font-size;
  line-height: normal;
  flex: 1;
  max-width: $container-max-width / 2;
  display: block;
  .ep-btn-group & {
    flex: 1 0 30%;
    max-width: none;
    margin: $global-spacing / 3;
  }

  padding: $global-spacing / 3 $global-spacing / 2;

  @include fast-transition;
  @include break( 'medium' ) {
    .ep-btn-group & {
      margin: $global-spacing / 4 0;
      flex: 1 0 100%;
    }
  }

  &::after {
    content: ' ';
    opacity: 0;
    border-top: $global-border-width solid currentColor;
    border-right: $global-border-width solid currentColor;
    transform: rotate(45deg);
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    @include size( $body-font-size );
    @include fast-transition;
  }

  &:active,
  &:focus,
  &:hover {
    padding-left: 0;
  }

  &:active::after,
  &:focus::after,
  &:hover::after {
    opacity: 1;
    right: $global-spacing / 2;
  }

  // Set font style
  @if $button-font == 'heading' {
    @include heading-style;
  }

  @elseif $button-font == 'body' {
    @include body-style;
  }

  @if $button-style-transition == 'grow' {
    &:active,
    &:focus,
    &:hover {
      transform: scale(1.1) rotate(unquote($button-style-transition-rotation + 'deg'));
    }
  }

  @elseif $button-style-transition == 'shrink' {
    &:active,
    &:focus,
    &:hover {
      transform: scale(0.9) rotate(unquote($button-style-transition-rotation + 'deg'));
    }
  }

  @if $button-style == 'transparent' or $button-style == 'border-fill' {
    border-color: $button-background-color;
    border-width: $button-border-width;
    border-radius: $button-border-radius;

    @if $button-style == 'transparent' {
      background-color: transparent;
      color: $button-background-color;
    }
    @else {
      background-color: $button-background-color;
    }
    @if $button-border-radius != 0 {
      border-radius: $button-border-radius;
    }

    &:active,
    &:focus,
    &:hover {
      @if $primary-color == $Y {
        color: $text-color-dark;
      }
      @else {
        color: $text-color-light;
      }
      // text-shadow: 0px 0px 3px transparentize($black, 0.5);
      border-color: $button-background-color;

      @if $button-style == 'transparent' {
        background-color: $button-background-color;
      }
      @else {
        background-color: $button-active-background-color;
      }
    }
  }

  @elseif $button-style == 'fill' {
    background-color: $button-background-color;
    border: none;
    @if $button-border-radius != 0 {
      border-radius: $button-border-radius;
    }

    &:active,
    &:focus,
    &:hover {
      background-color: $button-active-background-color;
    }
  }

  @elseif $button-style == '3D' {
    $button-color1: lighten(desaturate(adjust-hue($button-background-color, 1.6391), 3.9715), 18.4314);
    $button-color2: darken(desaturate(adjust-hue($button-background-color, -1.4903), 10.6695), 2.7451);
    $button-color3: lighten(saturate(adjust-hue($button-background-color, -1.6925), 2.4568), 12.1569);
    $button-color4: darken(desaturate(adjust-hue($button-background-color, -1.4903), 10.6695), 2.7451);
    box-shadow: 0 1px 0 0 $button-color1 inset;
    border: $button-border-width solid $button-background-color;
    background: $button-color3 linear-gradient(to bottom, $button-color3 5%, $button-color4 100%) repeat scroll 0 0;
    border-radius: $button-border-radius;

    &:active,
    &:focus,
    &:hover {
      background: $button-color2 linear-gradient(to bottom, $button-color2 5%, $button-color3 100%) repeat scroll 0 0;
    }
  }
}

.x-scroll-top i {
  line-height: 1;
}

.bg3 .x-btn.x-btn-global {
  @if $primary-color == $Y {
    $button-active-background-color: $black;
  }

  @if $button-style == 'transparent' or $button-style == 'border-fill' {
    border-color: $button-active-background-color;

    @if $button-style == 'transparent' {
      color: $button-active-background-color;
    }
    @else {
      background-color: $button-active-background-color;
    }

    &:active,
    &:focus,
    &:hover {
      border-color: $button-active-background-color;
      color: $input-active-border-color;

      @if $button-style == 'transparent' {
        background-color: $button-active-background-color;
      }
      @else {
        background-color: $button-active-background-color;
      }
    }
  }

  @elseif $button-style == 'fill' {
    background-color: $button-active-background-color;

    &:active,
    &:focus,
    &:hover {
      background-color: $button-active-background-color;
    }
  }

  @elseif $button-style == '3D' {
    $button-active-color1: lighten(desaturate(adjust-hue($button-active-background-color, 1.6391), 3.9715), 18.4314);
    $button-active-color2: darken(desaturate(adjust-hue($button-active-background-color, -1.4903), 10.6695), 2.7451);
    $button-active-color3: lighten(saturate(adjust-hue($button-active-background-color, -1.6925), 2.4568), 12.1569);
    $button-active-color4: darken(desaturate(adjust-hue($button-active-background-color, -1.4903), 10.6695), 2.7451);
    box-shadow: 0 1px 0 0 $button-active-color1 inset;
    border: $button-border-width solid $button-active-background-color;
    background: $button-active-color3 linear-gradient(to bottom, $button-active-color3 5%, $button-active-color4 100%) repeat scroll 0 0;
    border-radius: $button-border-radius;

    &:active,
    &:focus,
    &:hover {
      background: $button-active-color2 linear-gradient(to bottom, $button-active-color2 5%, $button-active-color3 100%) repeat scroll 0 0;
    }
  }
}
