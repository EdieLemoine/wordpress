@import 'functions/strings';
@import 'functions/lists';
@import 'functions/maps';

@function strip-unit( $number ) {
  @if type-of( $number ) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/// Stroke font-character
/// @param  {Integer} $stroke - Stroke width
/// @param  {Color}   $color  - Stroke color
/// @return {List}            - text-shadow list
@function stroke( $stroke, $color ) {
  $shadow: ();
  $from: $stroke * -1;
  @for $i from $from through $stroke {
   @for $j from $from through $stroke {
      $shadow: append( $shadow, $i * 1px $j * 1px 0 $color, comma );
    }
  }
  @return $shadow;
}

// Get preset z-index from map
// Usage: z-index: z( above-header );
@function z( $key ) {
   @if map-has-key( $z-layers, $key ){
    @return map-get( $z-layers, $key );
  }
  @warn "Unknown `#{$key}` in $z-layers.";
  @return null;
}

// Easily target all heading elements at once
@function headings( $all: false ) {
   @if $all == true {
    @return 'h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, .h-custom-headline';
  }
  @else {
    @return'h1, h2, h3, h4, h5, h6';
  }
}

// Easily target all text elements at once
@function textElements( $all: false ) {
   @return unquote( #{headings( $all )} ) +',' + unquote( ' blockquote, p, ul, span' );
}

// Quick image url
@function img( $file ) {
  @return url('#{$image-dir}#{$file}');
}


@function createList( $input ) {
  $list: ();

  @each $item in $input {
    $list: append( $list, unquote('#{$item},'));
  }

  $list: str-slice( quote( $list ), 1, str-length( quote( $list ) ) - 1);

  @return $list;
}

// Target all inputs of a given type
// Usage: #{inputs( 'text' )} { @content }
@function inputs( $type ) {
  $inputs: ();
  $list: ();

  @if $type == "text" {
    $inputs: ( 'text', 'email', 'phone', 'number', 'search' );
  }
  @else if $type == "buttons" {
    $inputs: ('button', 'submit', 'reset');
  }

  @each $input in $inputs {
    $list: append( $list, 'input[type="#{$input}"]');
  }

  @return createList( $list );
}
