// Get deep values in map
// Usage: map-get-deep( $fonts, 'body', 'atts', 'color' );
@function map-get-deep( $map, $keys... ) {
  $value: $map;

  @each $key in $keys {
    @if type_of( $key ) == 'list' {
      @each $list-item in $key {
        $bool: map-has-key( $value, $list-item );

        @if $bool {
          $value: map-get( $value, $list-item );
        }
      }
    }
    @else {
      $bool: map-has-key( $value, $key );

      @if $bool {
        $value: map-get( $value, $key );
      }
    }
  }
  @return $value;
}

// Get $nth value in a map or list
@function value( $map, $nth, $strip:false ) {
  $value: "";
  @if type_of( $map ) == 'map' {
    $map: map-values( $map );
    $value: nth( $map, $nth );
  }
  @elseif type_of( $map ) == 'list' {
    $value: nth( $map, $nth );
  }
  @else {
    @warn 'Argument 1 must be either a map or a list';
  }

  @if $strip == true {
    $value: strip-unit( $value );
  }

  @return $value;
}

// Get the first value in a map or list
@function first-value( $map, $strip:false ) {
  @return value( $map, 1, $strip );
}

// Get the last value in a map or list
@function last-value( $map, $strip:false ) {
  @return value( $map, length( $map ), $strip );
}

@function map-reverse( $map ) {
  $result: null;

  @if type-of( $map ) == "map" {
    $keys: map-keys( $map );
    $map-reversed: ();

    @for $i from length( $keys ) through 1 {
      $map-reversed: map-merge(
        $map-reversed,
        ( nth( $keys, $i ): map-get( $map, nth( $keys, $i ) ) )
      );
    }

    @if type-of( $map-reversed ) == "map" {
      $result: $map-reversed;
    } @else {
      @warn 'There was an error reversing the order of "#{$map}"';
    }
  } @else {
    @warn '"#{$map}" is not a valid map';
  }

  @return $result;
}


// See if map has deep value
// Usage: map-has-key-deep( $fonts, 'body', 'atts', 'color' );
@function map-has-key-deep( $map, $keys... ) {
  $list: remove-nth( $keys, length( $keys ) );
  $value: nth( $keys, length( $keys ) );

  $bool: true;

  @each $list-item in $list {
    @if $bool {
      $bool: map-has-key( $map, $list-item );
    }
    @else {
      @return $bool;
    }
    // @debug '$bool = #{$bool}';
  }

  // @debug '$map: #{$map}';
  // @debug '$list: #{$list}';
  // @debug '$value: #{$value}';

  @return map-has-key( map-get-deep( $map, $list ), $value );
}
